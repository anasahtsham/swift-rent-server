db.query('SELECT * FROM Users', (err, res) =>{
    if (err) {
        console.error("Error executing query", err.stack);
    } else {
        console.log(res.rows);
    }
});



app.get("/", (req, res) => {
    res.send("get req");
})

app.post("/submit", (req, res, next) => {
    console.log(req.body);
    res.send("post");
    next();
})

app.post('/api/register-account', async (req,res) => {
    //Inputs
    const {} = req.body;
    try {
        
    } catch (error) {
        console.error("Error during registration of user:", error);
        return res.status(500).json({ error: "Internal Server Error"});
    }
})


INSERT INTO public.userinformation(
	firstname, lastname, dob, phone, email, md5password)
	VALUES ('Anas', 'Ahtsham', '2001-03-30', '03358774206', 'mh.anasahtsham@gmail.com', '1qa2ws3ed4rf5tg6yh7uj8ik9ol0p1qa');


Change Password
app.post('/api/change-password', async (req,res) => {
    //Inputs
    const {} = req.body;
    try {
        
    } catch (error) {
        console.error("Error during registration of user:", error);
        return res.status(500).json({ error: "Internal Server Error"});
    }
})


New Role Registration
app.post('/api/new-role-registration', async (req,res) => {
    //Inputs
    const { userID, userType } = req.body;
    // console.log(userID);
    // console.log(userType);
    // return res.status(200).json({ success: true});
    try {
        //Creating new userType
        let ownerID = 0, tenantID = 0; 
        if (userType === 'owner') {
            const ownerQuery = await db.query('INSERT INTO Owner (userID) VALUES ($1) RETURNING id;', [userID]);
            ownerID = ownerQuery.rows[0].id;
        }else{
            const tenantQuery = await db.query('INSERT INTO Tenant (userID) VALUES ($1) RETURNING id;', [userID]);
            tenantID = tenantQuery.rows[0].id;
        }
        //Return userID, ownerID, tenantID, success status
        return res.status(200).json({ userID, ownerID, tenantID, success: true});
    } catch (error) {
        console.error("Error during registration of user:", error);
        return res.status(500).json({ error: "Internal Server Error"});
    }
})

